{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-11-05-implementing-a-pie-chart-using-react-and-d3-js/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Peach"}},"markdownRemark":{"id":"7b30fbeb-a8a2-50c1-ab11-e516bebfbc2a","excerpt":"Today, we will be looking into how to create a Pie Chart using React and D3.js Creating a new component The basic structure of our  component will look like‚Ä¶","html":"<p>Today, we will be looking into how to create a Pie Chart using React and D3.js</p>\n<h3>Creating a new component</h3>\n<p>The basic structure of our <code class=\"language-text\">&lt;PieChart /&gt;</code> component will look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> d3 <span class=\"token keyword\">from</span> <span class=\"token string\">'d3'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">PieChart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">,</span>\n    outerRadius<span class=\"token punctuation\">,</span>\n    innerRadius<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> margin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    top<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> right<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> bottom<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> left<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> outerRadius <span class=\"token operator\">+</span> margin<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> margin<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> outerRadius <span class=\"token operator\">+</span> margin<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> margin<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">drawChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// draw the chart here</span>\n  <span class=\"token punctuation\">}</span>    \n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"pie-container\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PieChart<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Let us take a look at the different props it will be using ‚Äî <code class=\"language-text\">margin</code> and <code class=\"language-text\">outerRadius</code> are used to calculate the <code class=\"language-text\">width</code> and <code class=\"language-text\">height</code> of our pie. By having <code class=\"language-text\">innerRadius</code> greater than 0, we can very easily convert our pie chart into a donut chart as well üç© üòÑ</p>\n<p>Our component will render a <code class=\"language-text\">div</code> element which will be containing the Pie Chart.</p>\n<p><code class=\"language-text\">drawChart</code> function will be responsible for actually drawing our pie chart. It will be called every time the <code class=\"language-text\">data</code> prop changes.</p>\n<h4>Defining the data</h4>\n<p><code class=\"language-text\">PieChart</code> will accept an array of objects for the <code class=\"language-text\">data</code> prop. This is how it will look like ‚Äî</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Apples'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Oranges'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Drawing the Pie</h3>\n<p>Now, let‚Äôs populate the <code class=\"language-text\">drawChart</code> function. Everything below will go inside this function:</p>\n<h4>Creating a color scale</h4>\n<p>First, let us define what interpolations is ‚Äî</p>\n<blockquote>\n<p><strong>Interpolation</strong> is the process of estimating unknown values that fall between known values.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> colorScale <span class=\"token operator\">=</span> d3     \n    <span class=\"token punctuation\">.</span><span class=\"token function\">scaleSequential</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>      \n    <span class=\"token punctuation\">.</span><span class=\"token function\">interpolator</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span>interpolateCool<span class=\"token punctuation\">)</span>      \n    <span class=\"token punctuation\">.</span><span class=\"token function\">domain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The <strong><a href=\"https://github.com/d3/d3-interpolate\">d3-interpolate</a></strong> module provides a variety of interpolation methods for blending between two values. Values may be numbers, colors, strings, arrays, or even deeply-nested objects.</p>\n<p>The <strong>scaleSequential</strong> method maps a continuous domain to a continuous range defined by an interpolator function. We are using the <strong>d3.interpolateCool</strong> color scale but you can use any <a href=\"https://github.com/d3/d3-scale-chromatic/blob/master/README.md\">other</a> as well.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*UH2buM-fFsZ_JTuqfjhLlg.png\" alt=\"d3.interpolateCool\"></p>\n<p><strong>d3.interpolateCool</strong></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*mac_xSL9Eoadwnab9ler5A.png\" alt=\"d3.interpolateWarm\"></p>\n<p><strong>d3.interpolateWarm</strong></p>\n<p>In simple words, any value falling between <code class=\"language-text\">[0, data.length]</code> will be mapped to a value in the given color scale. We will be using these colors so that each sector of our pie has a different color.</p>\n<h4>Appending SVG</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Remove the old svg</span>\n    d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pie-container'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'svg'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create new svg</span>\n    <span class=\"token keyword\">const</span> svg <span class=\"token operator\">=</span> d3\n      <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pie-container'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'svg'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'transform'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We first clear the previous chart before drawing a new one (remember <code class=\"language-text\">drawChart</code> is called every time the <code class=\"language-text\">data</code> changes?)</p>\n<p>We append an <code class=\"language-text\">svg</code> inside the <code class=\"language-text\">div</code> element we rendered. We also append <code class=\"language-text\">g</code> inside the <code class=\"language-text\">svg</code> to group our elements together to apply easy transformations to them. We translate this group of elements to the center of the <code class=\"language-text\">svg</code></p>\n<h4>Defining the generators</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> arcGenerator <span class=\"token operator\">=</span> d3\n      <span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">innerRadius</span><span class=\"token punctuation\">(</span>innerRadius<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">outerRadius</span><span class=\"token punctuation\">(</span>outerRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pieGenerator <span class=\"token operator\">=</span> d3\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">padAngle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> d<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> arc <span class=\"token operator\">=</span> svg\n      <span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token function\">pieGenerator</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">d3.arc</code> doesn‚Äôt actually draw any arcs yet but it is used to create an <code class=\"language-text\">arcGenerator</code> which will be used to draw the sectors of the pie. Similarly, <code class=\"language-text\">d3.pie</code> doesn‚Äôt draw the pie but it used to compute the necessary angles to represent our data as a pie.</p>\n<p>We then enter the svg group with the computed data. Now, we are ready to actually draw the pie.</p>\n<h4>Adding Sectors and Labels</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Append sectors</span>\n    arc\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> arcGenerator<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fill'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">colorScale</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stroke'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#ffffff'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stroke-width'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Append text labels</span>\n    arc\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text-anchor'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'middle'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'alignment-baseline'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'middle'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> d<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fill'</span><span class=\"token punctuation\">,</span> '#ffffff<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'transform'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arcGenerator<span class=\"token punctuation\">.</span><span class=\"token function\">centroid</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We append a path for each sector. If you notice carefully, we have used the index of each data item to map to the color scale which is used as a fill color for the sector.</p>\n<p>Next, we append text elements for each data item and position them using <code class=\"language-text\">arcGenerator.centroid</code> which returns the center of each sector. That‚Äôs it!</p>\n<p>This is how your pie chart will look like ‚ú®</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*HuIdpgBUQqXsjD0HMqldKA.png\" alt=\"Pie Chart\"></p>","frontmatter":{"title":"Implementing a Pie Chart using React and D3.js","date":"November 05, 2020","description":null,"tags":["javascript","d3.js","react","visualization"]}},"more":{"nodes":[{"fields":{"slug":"/2020-11-09-calling-javascript-code-from-c-c-using-webassembly/"},"frontmatter":{"date":"April 14, 2021","title":"Learning Python language by Algorithms","description":null,"tags":["algorithms","data structures","python"],"thumbnail":"/images/pexels-flickr-149767.jpg"}},{"fields":{"slug":"/2020-11-09-calling-javascript-code-from-c-c-using-webassembly copy/"},"frontmatter":{"date":"November 09, 2020","title":"Calling JavaScript code from C/C++ using WebAssembly","description":null,"tags":["javascript","webassembly","emscripten","c++","c"],"thumbnail":"/images/pexels-flickr-149767.jpg"}},{"fields":{"slug":"/2020-11-05-reactjs-guide-how-to-learn-react-as-a-complete-beginner/"},"frontmatter":{"date":"November 05, 2020","title":"ReactJS Guide: How to learn React as a complete beginner?","description":null,"tags":["javascript","beginner","react","roadmap"],"thumbnail":"/images/pexels-cottonbro-4065894.jpg"}}]},"previous":null,"next":{"fields":{"slug":"/2020-11-05-reactjs-guide-how-to-learn-react-as-a-complete-beginner/"},"frontmatter":{"title":"ReactJS Guide: How to learn React as a complete beginner?"}}},"pageContext":{"id":"7b30fbeb-a8a2-50c1-ab11-e516bebfbc2a","previousPostId":null,"nextPostId":"acd7060b-a7dd-5370-bbb2-5d9a1af0cd3f"}},"staticQueryHashes":["1713152521","2841359383"]}